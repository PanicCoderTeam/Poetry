// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package entity

const TableNamePoetry = "poetry"

// Poetry mapped from table <poetry>
type Poetry struct {
	ID         int64  `gorm:"column:id;type:bigint(20);primaryKey;autoIncrement:true" json:"id"`
	Title      string `gorm:"column:title;type:varchar(255)" json:"title"`
	TitleTradition string `gorm:"column:title_tradition;type:varchar(255)" json:"titleTradition"`
	Paragraphs string `gorm:"column:paragraphs;type:text;not null;comment:内容, 根据,分段" json:"paragraphs"`               // 内容, 根据,分段
	ParagraphsTradition string `gorm:"column:paragraphs_tradition;type:text;not null;comment:内容, 根据,分段" json:"paragraphsTradition"`               // 内容, 根据,分段
	Author     string `gorm:"column:author;type:varchar(128);not null;comment:作者" json:"author"`                      // 作者
	AuthorTradition string `gorm:"column:author_tradition;type:varchar(128);not null;comment:作者" json:"authorTradition"`	                  // 作者
	Rhythmic   string `gorm:"column:rhythmic;type:varchar(128);not null;comment:词牌名" json:"rhythmic"`                 // 词牌名
	Notes      string `gorm:"column:notes;type:text;comment:备注" json:"notes"`                                         // 备注
	PoetryType string `gorm:"column:poetry_type;type:varchar(128);not null;comment:诗词类型，唐诗、宋词、元曲等" json:"poetryType"` // 诗词类型，唐诗、宋词、元曲等
	Dynasty    string `gorm:"column:dynasty;type:varchar(128);not null;comment:朝代" json:"dynasty"`                    // 朝代
}

// TableName Poetry's table name
func (*Poetry) TableName() string {
	return TableNamePoetry
}
